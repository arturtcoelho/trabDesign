2.
Operação: criarRelatorio() -> void
Referências cruzadas: Caso de uso Criar Relatório Administrativo
Pré-condições:
    O administrador da folha de pagamento deve estar conectado ao sistema.
Pós-condições:
    O sistema gera mostra o formulario com os campos tipo, data inicio, data fim e nomes dos funcionarios

2.1.
Operação: entraDados(tipo: TipoDados, dataInicio: Data, dataFim: Data, nomeFuncionarios: Lista de Nomes) -> void
Referências cruzadas: Caso de uso Criar Relatório Administrativo
Pré-condições:
    Deve ter sido iniciado o relatório, mostrando o formulario de dados
Pós-condições:
    O sistema gera um relatório com os dados
    O sistema mostra uma tela com o relatório gerado

2.2.
Operação: salvarRelatório() -> void
Referências cruzadas: Caso de uso Criar Relatório Administrativo
Pré-condições:
    O sistema deve ter gerado um relatório e mostrado ele na tela
Pós-condições:
    O sistema mostra o formulario pedindo os dados de onde salvar

2.3.
Operação: salvarEm() -> void
Referências cruzadas: Caso de uso Criar Relatório Administrativo
Pré-condições:
    O sistema deve ter mostrado o formulario com local e nome para salvar
Pós-condições:
    O sistema mostra salva o relatório no local indicado
    O sistema pede a confirmação dos dados

2.4.
Operação: confirma(confirmação: bool) -> void
Referências cruzadas: Caso de uso Criar Relatório Administrativo
Pré-condições:
    O sistema deve ter mostrado a mensagem de confirmação com os dados
    O funcionario deve ter confirmado a mensagem
Pós-condições:
    O sistema salva os dados no local indicado
    O sistema mostra uma mensagem de sucesso

3.
Operação: criarRelatorio() -> void
Referências cruzadas: Caso de uso Criar Relatório de Funcionário
Pré-condições:
    O funcionário deve estar conectado ao sistema antes de iniciar o caso de uso.
Pós-condições: 
    O sistema mostra o formulario pedindo os dados
    
3.1
Operação: entraDados(tipoRelatorio: TipoRelatório, dataIni: Data, dataFim: Data) -> void
Referências cruzadas: Caso de uso Criar Relatório de Funcionário
Pré-condições:
    O funcionário deve preencher os dados do formulário
Pós-condições: 
    O sistema gera um relatório com os dados
    O sistema mostra o relatorio com os dados selecionados
    
3.1.1
Operação: getCobrança() -> Lista Cobranças
Referências cruzadas: Caso de uso Criar Relatório de Funcionário
Pré-condições:
    O funcionário deve preencher os dados do formulário
    O tipo de relatorio deve ser "TotalHoralProjeto"
Pós-condições: 
    O sistema mostra os numeros de cobrança disponivel

3.1.2
Operação: selecionaCobrança(numCobrança) -> void
Referências cruzadas: Caso de uso Criar Relatório de Funcionário
Pré-condições:
    O funcionario deve selecionar o numero de cobrança
Pós-condições: 
    O sistema grava o numero de cobrança selecionado
    O sistema mostra esse dado com o relatorio selecionado

3.2
Operação: salvarRelatorio(relatorio: Relatorio) -> void
Referências cruzadas: Caso de uso Criar Relatório de Funcionário
Pré-condições:
    O funcionário deve escolher salvar o relatorio mostrado
Pós-condições: 
    O sistema grava o relatório
    O sistema mostra o formulario de seleção de local para salvar

3.3
Operação: salvarEm(nome: String, local: String) -> void
Referências cruzadas: Caso de uso Criar Relatório de Funcionário
Pré-condições:
    O funcionário deve preencher o formulario de seleção de local para salvar
Pós-condições: 
    O sistema mostra a confirmação de local para salvar

3.4.
Operação: confirma(confirmação: bool) -> void
Referências cruzadas: Caso de uso Criar Relatório de Funcionário
Pré-condições:
    O sistema deve ter mostrado a mensagem de confirmação com os dados
    O funcionario deve ter confirmado a mensagem
Pós-condições:
    O sistema salva os dados no local indicado
    O sistema mostra uma mensagem de sucesso

4.
Operação: entrar(nome, senha)

Ator principal: Usuário

Referências cruzadas: Caso de uso Entrar

Pré-Condições:

    Nenhuma.

Pós-Condições:

    Se o caso de uso foi bem-sucedido, o usuário agora está conectado ao sistema. Caso contrário, o estado do sistema é inalterado.

5.1.
Operação: criarUsuario(Nome, Tipo, Endereço, NumeroSegurançaSocial, DeduçõesPadrão, OutrasDeduções, Telefone, TaxaHoraria, Salário, Comissão, LimiteHoras)

Ator principal: Administrador da Folha de Pagamento

Referências cruzadas: Manter Informações Usuário

Pré-Condições:

    Para utilizar este serviço, é necessário ter acesso ao sistema de folha de pagamento e ser um administrador da folha de pagamento com permissão para adicionar, atualizar ou excluir informações de funcionários.

Pós-condições:

    Adicionar um funcionário:

    O sistema gera e atribui um novo número de identificação do funcionário.
    O método padrão de entrega do contracheque é definido como "retirada".
    As informações do novo funcionário são adicionadas ao sistema.
    O sistema fornece ao administrador da folha de pagamento o novo ID do funcionário.

5.2.
Operação: atualizarUsuario(Nome, Tipo, Endereço, NumeroSegurançaSocial, DeduçõesPadrão, OutrasDeduções, Telefone, TaxaHoraria, Salário, Comissão, LimiteHoras)

Ator principal: Administrador da Folha de Pagamento

Referências cruzadas: Manter Informações Usuário

Pré-Condições:

    Para utilizar este serviço, é necessário ter acesso ao sistema de folha de pagamento e ser um administrador da folha de pagamento com permissão para adicionar, atualizar ou excluir informações de funcionários.

Pós-condições:

    Atualizar um funcionário:

    O sistema recupera e exibe as informações do funcionário com base no ID fornecido pelo administrador da folha de pagamento.
    Quando o administrador da folha de pagamento atualizar as informações necessárias, o sistema atualizará o cadastro do funcionário com as informações atualizadas.

5.3.
Operação: excluirUsuario(id)

Ator principal: Administrador da Folha de Pagamento

Referências cruzadas: Manter Informações Usuário

Pré-Condições:

    Para utilizar este serviço, é necessário ter acesso ao sistema de folha de pagamento e ser um administrador da folha de pagamento com permissão para adicionar, atualizar ou excluir informações de funcionários.

Pós-condições:

    Excluir um funcionário:

    O sistema recupera e exibe as informações do funcionário com base no ID fornecido pelo administrador da folha de pagamento.
    O campo marcadoParaExclusão do funcionário é marcado como verdadeiro

6.1.
Operação: criarOrdem(pontoContato, endereço, produtos, data)

Ator Principal: Funcionário Comissionado

Referências cruzadas: Manter Ordem Compra

Pré-Condições:

    O Funcionário Comissionado deve estar conectado ao sistema antes do início deste caso de uso

Pós-condições:
    
    Se o caso de uso foi bem-sucedido, as informações do pedido de compra são salvas no sistema
    O pedido é atribuido ao funcionário comissionado

6.2.
Operação: atualizarOrdem(pontoContato, endereço, produtos, data)

Ator Principal: Funcionário Comissionado

Referências cruzadas: Manter Ordem Compra

Pré-Condições:

    O Funcionário Comissionado deve estar conectado ao sistema antes do início deste caso de uso e deve existir uma ordem de compra

Pós-condições:
    
    Se o caso de uso foi bem-sucedido, as informações do pedido de compra são salvas no sistema

6.3.
Operação: excluirOrdem(id)

Ator Principal: Funcionário Comissionado

Referências cruzadas: Manter Ordem Compra

Pré-Condições:

    O Funcionário Comissionado deve estar conectado ao sistema antes do início deste caso de uso

Pós-condições:
    
    Se o caso de uso foi bem-sucedido, as informações do pedido de compra são excluidos do sistema

7.
Operação: adicionaHorasCartão(quantidadeHoras)

Ator Principal: Funcionário

Referências cruzadas: Manter Cartão Ponto

Pré-Condições:

    O Funcionário deve estar conectado ao sistema antes do início deste caso de uso

Pós-condições:

    Se o caso de uso for bem-sucedido, as informacões do cartão de ponto do funcionário serão
    salvas no sistema. Caso contrário, o estado do sistema ́e inalterado.
    As horas indicadas são marcadas no cartão

7.1
Operação: enviarCartão()

Ator Principal: Funcionário

Referências cruzadas: Manter Cartão Ponto

Pré-Condições:

    O Funcionário deve estar conectado ao sistema antes do início deste caso de uso
    Deve haver um cartão

Pós-condições:

    O cartão é marcado como enviado, portanto não pode mais ser modificado

8.
Operação: executarFolha()

Ator Principal: Relógio do Sistema

Referências cruzadas: Executar Folha Pagamento

Pré-Condições:

    Existe uma folha de pagamento, e chegou o dia do pagamento

Pós-condições:
    Os pagamentos de cada funcionário elegível para serem pagos na data atual foram processados.
    Os funcionários marcados para serem excluidos foram removidos do sistema.

9.
Operação: selecionarMetodo()

Ator Principal: Funcionário

Referências cruzadas: Selecionar Método de Pagamento

Pré-Condições:

    O Funcionário deve estar conectado ao sistema antes do início deste caso de uso

Pós-condições:
    
    Se o caso de uso foi bem-sucedido, a forma de pagamento do Funcionário ́e atualizada no sistema
    Dependendo do tipo escolhido:
        Correio: dados de endereço atualizados em tipoPagamento de funcionario
        Depósito Direto: dados de banco e conta atualizados em tipoPagamento de funcionario
